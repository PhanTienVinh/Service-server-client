// Generated by gencpp from file letsgoo/string_length.msg
// DO NOT EDIT!


#ifndef LETSGOO_MESSAGE_STRING_LENGTH_H
#define LETSGOO_MESSAGE_STRING_LENGTH_H

#include <ros/service_traits.h>


#include <letsgoo/string_lengthRequest.h>
#include <letsgoo/string_lengthResponse.h>


namespace letsgoo
{

struct string_length
{

typedef string_lengthRequest Request;
typedef string_lengthResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct string_length
} // namespace letsgoo


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::letsgoo::string_length > {
  static const char* value()
  {
    return "148848fbe5e0d609428b32ee03f3c854";
  }

  static const char* value(const ::letsgoo::string_length&) { return value(); }
};

template<>
struct DataType< ::letsgoo::string_length > {
  static const char* value()
  {
    return "letsgoo/string_length";
  }

  static const char* value(const ::letsgoo::string_length&) { return value(); }
};


// service_traits::MD5Sum< ::letsgoo::string_lengthRequest> should match
// service_traits::MD5Sum< ::letsgoo::string_length >
template<>
struct MD5Sum< ::letsgoo::string_lengthRequest>
{
  static const char* value()
  {
    return MD5Sum< ::letsgoo::string_length >::value();
  }
  static const char* value(const ::letsgoo::string_lengthRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::letsgoo::string_lengthRequest> should match
// service_traits::DataType< ::letsgoo::string_length >
template<>
struct DataType< ::letsgoo::string_lengthRequest>
{
  static const char* value()
  {
    return DataType< ::letsgoo::string_length >::value();
  }
  static const char* value(const ::letsgoo::string_lengthRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::letsgoo::string_lengthResponse> should match
// service_traits::MD5Sum< ::letsgoo::string_length >
template<>
struct MD5Sum< ::letsgoo::string_lengthResponse>
{
  static const char* value()
  {
    return MD5Sum< ::letsgoo::string_length >::value();
  }
  static const char* value(const ::letsgoo::string_lengthResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::letsgoo::string_lengthResponse> should match
// service_traits::DataType< ::letsgoo::string_length >
template<>
struct DataType< ::letsgoo::string_lengthResponse>
{
  static const char* value()
  {
    return DataType< ::letsgoo::string_length >::value();
  }
  static const char* value(const ::letsgoo::string_lengthResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LETSGOO_MESSAGE_STRING_LENGTH_H
